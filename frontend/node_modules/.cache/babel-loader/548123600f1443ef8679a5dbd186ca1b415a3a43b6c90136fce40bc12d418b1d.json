{"ast":null,"code":"var _jsxFileName = \"D:\\\\video_summarization_api\\\\frontend\\\\src\\\\Uploadform.js\",\n  _s = $RefreshSig$();\n// src/UploadForm.js\nimport React, { useState } from 'react';\nimport { uploadVideo } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = ({\n  onResult\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleUpload = async () => {\n    if (!file) return alert(\"Please select a video file first.\");\n    setLoading(true);\n    try {\n      const result = await uploadVideo(file);\n      onResult(result.video_url);\n    } catch (err) {\n      console.error(\"Upload failed:\", err);\n      alert(\"Failed to process video.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"video/mp4\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: loading,\n      children: loading ? \"Processing...\" : \"Summarize Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadForm, \"b5r+Px8JiWNYfU82tOaR18FdgbQ=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","uploadVideo","jsxDEV","_jsxDEV","UploadForm","onResult","_s","file","setFile","loading","setLoading","handleUpload","alert","result","video_url","err","console","error","style","marginBottom","children","type","accept","onChange","e","target","files","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/video_summarization_api/frontend/src/Uploadform.js"],"sourcesContent":["// src/UploadForm.js\r\nimport React, { useState } from 'react';\r\nimport { uploadVideo } from './api';\r\n\r\nconst UploadForm = ({ onResult }) => {\r\n  const [file, setFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return alert(\"Please select a video file first.\");\r\n    setLoading(true);\r\n    try {\r\n      const result = await uploadVideo(file);\r\n      onResult(result.video_url);\r\n    } catch (err) {\r\n      console.error(\"Upload failed:\", err);\r\n      alert(\"Failed to process video.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginBottom: '1rem' }}>\r\n      <input type=\"file\" accept=\"video/mp4\" onChange={(e) => setFile(e.target.files[0])} />\r\n      <button onClick={handleUpload} disabled={loading}>\r\n        {loading ? \"Processing...\" : \"Summarize Video\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACJ,IAAI,EAAE,OAAOK,KAAK,CAAC,mCAAmC,CAAC;IAC5DF,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMG,MAAM,GAAG,MAAMZ,WAAW,CAACM,IAAI,CAAC;MACtCF,QAAQ,CAACQ,MAAM,CAACC,SAAS,CAAC;IAC5B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEF,GAAG,CAAC;MACpCH,KAAK,CAAC,0BAA0B,CAAC;IACnC,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEP,OAAA;IAAKe,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACnCjB,OAAA;MAAOkB,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,WAAW;MAACC,QAAQ,EAAGC,CAAC,IAAKhB,OAAO,CAACgB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrF3B,OAAA;MAAQ4B,OAAO,EAAEpB,YAAa;MAACqB,QAAQ,EAAEvB,OAAQ;MAAAW,QAAA,EAC9CX,OAAO,GAAG,eAAe,GAAG;IAAiB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACxB,EAAA,CA1BIF,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AA4BhB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}