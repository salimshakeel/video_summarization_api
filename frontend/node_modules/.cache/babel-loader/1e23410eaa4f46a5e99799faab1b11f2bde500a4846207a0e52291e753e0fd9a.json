{"ast":null,"code":"// src/App.js\nimport React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[video,setVideo]=useState(null);const[loading,setLoading]=useState(false);const[summaryUrl,setSummaryUrl]=useState(null);// ✅ You forgot this function\nconst handleFileChange=e=>{setVideo(e.target.files[0]);setSummaryUrl(null);};const handleUpload=async()=>{if(!video)return;const formData=new FormData();formData.append(\"video\",video);// must match FastAPI parameter name\nsetLoading(true);try{const response=await fetch(\"http://localhost:8000/summarize\",{method:\"POST\",body:formData});if(!response.ok){throw new Error(\"Upload failed\");}const data=await response.json();const fullUrl=\"http://localhost:8000\".concat(data.summary_video_url);setSummaryUrl(fullUrl);}catch(err){alert(\"Error: \"+err.message);console.error(err);}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:40},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83C\\uDFAC Video Summarization\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\"video/*\",onChange:handleFileChange}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:handleUpload,disabled:!video||loading,style:{marginTop:10},children:loading?\"Summarizing...\":\"Upload & Summarize\"}),summaryUrl&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:20},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDCE5 Summarized Video:\"}),/*#__PURE__*/_jsx(\"video\",{src:summaryUrl,controls:true,width:\"480\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"a\",{href:summaryUrl,download:true,style:{marginTop:10,display:'inline-block'},children:\"\\u2B07\\uFE0F Download Summary\"})]})]});}export default App;// // src/App.js\n// import React, { useState, useEffect } from 'react';\n// function App() {\n//   const [video, setVideo] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [summaryUrl, setSummaryUrl] = useState(null);\n//   const [progress, setProgress] = useState(0);\n//   const [currentTip, setCurrentTip] = useState('');\n//   const [isDragging, setIsDragging] = useState(false);\n//   const tips = [\n//     \"Did you know AI can summarize a full lecture in seconds?\",\n//     \"Our neural networks are crunching your video...\",\n//     \"Let AI do the heavy lifting!\",\n//     \"Processing your video with deep learning magic...\",\n//     \"Analyzing frames and extracting key moments...\"\n//   ];\n//   useEffect(() => {\n//     if (loading) {\n//       const tipInterval = setInterval(() => {\n//         setCurrentTip(tips[Math.floor(Math.random() * tips.length)]);\n//       }, 4000);\n//       return () => clearInterval(tipInterval);\n//     }\n//   }, [loading]);\n//   const handleFileChange = (e) => {\n//     setVideo(e.target.files[0]);\n//     setSummaryUrl(null);\n//   };\n//   const handleDragOver = (e) => {\n//     e.preventDefault();\n//     setIsDragging(true);\n//   };\n//   const handleDragLeave = () => {\n//     setIsDragging(false);\n//   };\n//   const handleDrop = (e) => {\n//     e.preventDefault();\n//     setIsDragging(false);\n//     if (e.dataTransfer.files[0]) {\n//       setVideo(e.dataTransfer.files[0]);\n//       setSummaryUrl(null);\n//     }\n//   };\n//   const handleUpload = async () => {\n//     if (!video) return;\n//     const formData = new FormData();\n//     formData.append(\"video\", video);\n//     setLoading(true);\n//     setProgress(0);\n//     try {\n//       const response = await fetch(\"http://localhost:8000/summarize\", {\n//         method: \"POST\",\n//         body: formData,\n//       });\n//       if (!response.ok) {\n//         throw new Error(\"Upload failed\");\n//       }\n//       const data = await response.json();\n//       const fullUrl = `http://localhost:8000${data.summary_video_url}`;\n//       setSummaryUrl(fullUrl);\n//     } catch (err) {\n//       alert(\"Error: \" + err.message);\n//       console.error(err);\n//     } finally {\n//       setLoading(false);\n//       setProgress(0);\n//     }\n//   };\n//   return (\n//     <div style={{\n//       minHeight: '100vh',\n//       background: 'linear-gradient(135deg, #0f0c29, #302b63, #24243e)',\n//       color: 'white',\n//       position: 'relative',\n//       overflow: 'hidden',\n//       padding: '2rem'\n//     }}>\n//       {/* Animated background elements */}\n//       <div style={{\n//         position: 'absolute',\n//         top: 0,\n//         left: 0,\n//         right: 0,\n//         bottom: 0,\n//         backgroundImage: 'radial-gradient(circle at 20% 30%, rgba(100, 100, 255, 0.1) 0%, transparent 50%)',\n//         zIndex: 0\n//       }}></div>\n//       {/* Floating particles */}\n//       {[...Array(20)].map((_, i) => (\n//         <div key={i} style={{\n//           position: 'absolute',\n//           width: '2px',\n//           height: '2px',\n//           borderRadius: '50%',\n//           background: 'rgba(100, 200, 255, 0.8)',\n//           top: `${Math.random() * 100}%`,\n//           left: `${Math.random() * 100}%`,\n//           animation: `float ${5 + Math.random() * 10}s linear infinite`,\n//           zIndex: 0\n//         }}></div>\n//       ))}\n//       <div style={{\n//         position: 'relative',\n//         zIndex: 1,\n//         maxWidth: '1200px',\n//         margin: '0 auto',\n//         textAlign: 'center'\n//       }}>\n//         <h1 style={{\n//           fontSize: '3.5rem',\n//           fontWeight: '800',\n//           marginBottom: '2rem',\n//           background: 'linear-gradient(90deg, #00d4ff, #7e5bef)',\n//           WebkitBackgroundClip: 'text',\n//           WebkitTextFillColor: 'transparent',\n//           textShadow: '0 0 10px rgba(100, 200, 255, 0.3)'\n//         }}>\n//           AI Video Summarization\n//         </h1>\n//         <p style={{\n//           fontSize: '1.2rem',\n//           marginBottom: '3rem',\n//           opacity: 0.8\n//         }}>\n//           Using Deep Learning Techniques\n//         </p>\n//         {!loading && !summaryUrl && (\n//           <div \n//             onDragOver={handleDragOver}\n//             onDragLeave={handleDragLeave}\n//             onDrop={handleDrop}\n//             onClick={() => document.getElementById('fileInput').click()}\n//             style={{\n//               border: `2px dashed ${isDragging ? '#7e5bef' : 'rgba(255, 255, 255, 0.2)'}`,\n//               borderRadius: '20px',\n//               padding: '3rem 2rem',\n//               background: 'rgba(0, 0, 0, 0.2)',\n//               backdropFilter: 'blur(10px)',\n//               cursor: 'pointer',\n//               transition: 'all 0.3s ease',\n//               boxShadow: isDragging ? '0 0 20px rgba(126, 91, 239, 0.5)' : '0 0 20px rgba(0, 0, 0, 0.2)',\n//               margin: '0 auto',\n//               maxWidth: '600px',\n//               position: 'relative',\n//               overflow: 'hidden'\n//             }}\n//           >\n//             <div style={{\n//               position: 'absolute',\n//               top: 0,\n//               left: 0,\n//               right: 0,\n//               height: '3px',\n//               background: 'linear-gradient(90deg, #00d4ff, #7e5bef)',\n//               width: `${progress}%`,\n//               transition: 'width 0.3s ease'\n//             }}></div>\n//             <div style={{\n//               fontSize: '5rem',\n//               marginBottom: '1rem',\n//               color: 'rgba(100, 200, 255, 0.5)'\n//             }}>\n//               <i className=\"fas fa-video\"></i>\n//             </div>\n//             <h3 style={{\n//               marginBottom: '1rem',\n//               fontSize: '1.5rem'\n//             }}>\n//               {isDragging ? 'Drop your video here' : 'Upload your video to summarize'}\n//             </h3>\n//             <p style={{\n//               opacity: 0.7,\n//               marginBottom: '1.5rem'\n//             }}>\n//               Drag & drop or click to browse files\n//             </p>\n//             <input \n//               id=\"fileInput\"\n//               type=\"file\" \n//               accept=\"video/*\" \n//               onChange={handleFileChange}\n//               style={{ display: 'none' }}\n//             />\n//             {video && (\n//               <button \n//                 onClick={(e) => {\n//                   e.stopPropagation();\n//                   handleUpload();\n//                 }}\n//                 style={{\n//                   background: 'linear-gradient(90deg, #00d4ff, #7e5bef)',\n//                   border: 'none',\n//                   padding: '0.8rem 2rem',\n//                   borderRadius: '50px',\n//                   color: 'white',\n//                   fontWeight: '600',\n//                   cursor: 'pointer',\n//                   transition: 'all 0.3s ease',\n//                   boxShadow: '0 4px 15px rgba(0, 212, 255, 0.3)',\n//                   marginTop: '1rem'\n//                 }}\n//               >\n//                 Process Video\n//               </button>\n//             )}\n//           </div>\n//         )}\n//         {loading && (\n//           <div style={{\n//             background: 'rgba(0, 0, 0, 0.2)',\n//             backdropFilter: 'blur(10px)',\n//             borderRadius: '20px',\n//             padding: '3rem',\n//             maxWidth: '600px',\n//             margin: '0 auto',\n//             textAlign: 'center'\n//           }}>\n//             <div style={{\n//               position: 'relative',\n//               width: '150px',\n//               height: '150px',\n//               margin: '0 auto 2rem'\n//             }}>\n//               <div style={{\n//                 position: 'absolute',\n//                 top: '50%',\n//                 left: '50%',\n//                 transform: 'translate(-50%, -50%)',\n//                 width: '100%',\n//                 height: '100%',\n//                 border: '3px solid rgba(100, 200, 255, 0.2)',\n//                 borderRadius: '50%',\n//                 animation: 'pulse 2s infinite'\n//               }}></div>\n//               <div style={{\n//                 position: 'absolute',\n//                 top: '50%',\n//                 left: '50%',\n//                 transform: 'translate(-50%, -50%)',\n//                 width: '80%',\n//                 height: '80%',\n//                 border: '3px solid rgba(100, 200, 255, 0.4)',\n//                 borderRadius: '50%',\n//                 animation: 'pulse 2s infinite 0.5s'\n//               }}></div>\n//               <div style={{\n//                 position: 'absolute',\n//                 top: '50%',\n//                 left: '50%',\n//                 transform: 'translate(-50%, -50%)',\n//                 width: '60%',\n//                 height: '60%',\n//                 border: '3px solid rgba(100, 200, 255, 0.6)',\n//                 borderRadius: '50%',\n//                 animation: 'pulse 2s infinite 1s'\n//               }}></div>\n//               <div style={{\n//                 position: 'absolute',\n//                 top: '50%',\n//                 left: '50%',\n//                 transform: 'translate(-50%, -50%)',\n//                 fontSize: '3rem',\n//                 color: '#00d4ff'\n//               }}>\n//                 <i className=\"fas fa-brain\"></i>\n//               </div>\n//             </div>\n//             <h3 style={{\n//               marginBottom: '1rem',\n//               fontSize: '1.5rem'\n//             }}>\n//               Analyzing your video...\n//             </h3>\n//             <p style={{\n//               opacity: 0.8,\n//               fontStyle: 'italic',\n//               minHeight: '50px'\n//             }}>\n//               {currentTip}\n//             </p>\n//             <div style={{\n//               width: '100%',\n//               height: '6px',\n//               background: 'rgba(255, 255, 255, 0.1)',\n//               borderRadius: '3px',\n//               marginTop: '2rem',\n//               overflow: 'hidden'\n//             }}>\n//               <div style={{\n//                 width: `${progress}%`,\n//                 height: '100%',\n//                 background: 'linear-gradient(90deg, #00d4ff, #7e5bef)',\n//                 transition: 'width 0.3s ease'\n//               }}></div>\n//             </div>\n//           </div>\n//         )}\n//         {summaryUrl && (\n//           <div style={{\n//             background: 'rgba(0, 0, 0, 0.2)',\n//             backdropFilter: 'blur(10px)',\n//             borderRadius: '20px',\n//             padding: '3rem',\n//             maxWidth: '800px',\n//             margin: '0 auto',\n//             textAlign: 'center'\n//           }}>\n//             <h3 style={{\n//               marginBottom: '2rem',\n//               fontSize: '1.8rem',\n//               color: '#00d4ff'\n//             }}>\n//               Your summarized video is ready!\n//             </h3>\n//             <video \n//               src={summaryUrl} \n//               controls \n//               style={{\n//                 width: '100%',\n//                 maxWidth: '600px',\n//                 borderRadius: '10px',\n//                 boxShadow: '0 10px 30px rgba(0, 0, 0, 0.3)'\n//               }}\n//             />\n//             <div style={{ marginTop: '2rem' }}>\n//               <a \n//                 href={summaryUrl} \n//                 download\n//                 style={{\n//                   background: 'linear-gradient(90deg, #00d4ff, #7e5bef)',\n//                   border: 'none',\n//                   padding: '0.8rem 2rem',\n//                   borderRadius: '50px',\n//                   color: 'white',\n//                   fontWeight: '600',\n//                   cursor: 'pointer',\n//                   transition: 'all 0.3s ease',\n//                   boxShadow: '0 4px 15px rgba(0, 212, 255, 0.3)',\n//                   textDecoration: 'none',\n//                   display: 'inline-block'\n//                 }}\n//               >\n//                 Download Summary\n//               </a>\n//               <button \n//                 onClick={() => {\n//                   setVideo(null);\n//                   setSummaryUrl(null);\n//                 }}\n//                 style={{\n//                   background: 'rgba(255, 255, 255, 0.1)',\n//                   border: '1px solid rgba(255, 255, 255, 0.2)',\n//                   padding: '0.8rem 2rem',\n//                   borderRadius: '50px',\n//                   color: 'white',\n//                   fontWeight: '600',\n//                   cursor: 'pointer',\n//                   transition: 'all 0.3s ease',\n//                   marginLeft: '1rem'\n//                 }}\n//               >\n//                 Process Another Video\n//               </button>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//       {/* Add Font Awesome for icons */}\n//       <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\" />\n//     </div>\n//   );\n// }\n// export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","App","video","setVideo","loading","setLoading","summaryUrl","setSummaryUrl","handleFileChange","e","target","files","handleUpload","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","fullUrl","concat","summary_video_url","err","alert","message","console","error","style","padding","children","type","accept","onChange","onClick","disabled","marginTop","src","controls","width","href","download","display"],"sources":["D:/video_summarization_api/frontend/src/App.js"],"sourcesContent":["\r\n// src/App.js\r\nimport React, { useState } from 'react';\r\n\r\nfunction App() {\r\n  const [video, setVideo] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [summaryUrl, setSummaryUrl] = useState(null);\r\n\r\n  // ✅ You forgot this function\r\n  const handleFileChange = (e) => {\r\n    setVideo(e.target.files[0]);\r\n    setSummaryUrl(null);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!video) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"video\", video); // must match FastAPI parameter name\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/summarize\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Upload failed\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      const fullUrl = `http://localhost:8000${data.summary_video_url}`;\r\n      setSummaryUrl(fullUrl);\r\n    } catch (err) {\r\n      alert(\"Error: \" + err.message);\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 40 }}>\r\n      <h2>🎬 Video Summarization</h2>\r\n      <input type=\"file\" accept=\"video/*\" onChange={handleFileChange} />\r\n      <br />\r\n      <button onClick={handleUpload} disabled={!video || loading} style={{ marginTop: 10 }}>\r\n        {loading ? \"Summarizing...\" : \"Upload & Summarize\"}\r\n      </button>\r\n\r\n      {summaryUrl && (\r\n        <div style={{ marginTop: 20 }}>\r\n          <h4>📥 Summarized Video:</h4>\r\n          <video src={summaryUrl} controls width=\"480\" />\r\n          <br />\r\n          <a href={summaryUrl} download style={{ marginTop: 10, display: 'inline-block' }}>\r\n            ⬇️ Download Summary\r\n          </a>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // src/App.js\r\n// import React, { useState, useEffect } from 'react';\r\n\r\n// function App() {\r\n//   const [video, setVideo] = useState(null);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [summaryUrl, setSummaryUrl] = useState(null);\r\n//   const [progress, setProgress] = useState(0);\r\n//   const [currentTip, setCurrentTip] = useState('');\r\n//   const [isDragging, setIsDragging] = useState(false);\r\n\r\n//   const tips = [\r\n//     \"Did you know AI can summarize a full lecture in seconds?\",\r\n//     \"Our neural networks are crunching your video...\",\r\n//     \"Let AI do the heavy lifting!\",\r\n//     \"Processing your video with deep learning magic...\",\r\n//     \"Analyzing frames and extracting key moments...\"\r\n//   ];\r\n\r\n//   useEffect(() => {\r\n//     if (loading) {\r\n//       const tipInterval = setInterval(() => {\r\n//         setCurrentTip(tips[Math.floor(Math.random() * tips.length)]);\r\n//       }, 4000);\r\n//       return () => clearInterval(tipInterval);\r\n//     }\r\n//   }, [loading]);\r\n\r\n//   const handleFileChange = (e) => {\r\n//     setVideo(e.target.files[0]);\r\n//     setSummaryUrl(null);\r\n//   };\r\n\r\n//   const handleDragOver = (e) => {\r\n//     e.preventDefault();\r\n//     setIsDragging(true);\r\n//   };\r\n\r\n//   const handleDragLeave = () => {\r\n//     setIsDragging(false);\r\n//   };\r\n\r\n//   const handleDrop = (e) => {\r\n//     e.preventDefault();\r\n//     setIsDragging(false);\r\n//     if (e.dataTransfer.files[0]) {\r\n//       setVideo(e.dataTransfer.files[0]);\r\n//       setSummaryUrl(null);\r\n//     }\r\n//   };\r\n\r\n//   const handleUpload = async () => {\r\n//     if (!video) return;\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"video\", video);\r\n\r\n//     setLoading(true);\r\n//     setProgress(0);\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:8000/summarize\", {\r\n//         method: \"POST\",\r\n//         body: formData,\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error(\"Upload failed\");\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       const fullUrl = `http://localhost:8000${data.summary_video_url}`;\r\n//       setSummaryUrl(fullUrl);\r\n//     } catch (err) {\r\n//       alert(\"Error: \" + err.message);\r\n//       console.error(err);\r\n//     } finally {\r\n//       setLoading(false);\r\n//       setProgress(0);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{\r\n//       minHeight: '100vh',\r\n//       background: 'linear-gradient(135deg, #0f0c29, #302b63, #24243e)',\r\n//       color: 'white',\r\n//       position: 'relative',\r\n//       overflow: 'hidden',\r\n//       padding: '2rem'\r\n//     }}>\r\n//       {/* Animated background elements */}\r\n//       <div style={{\r\n//         position: 'absolute',\r\n//         top: 0,\r\n//         left: 0,\r\n//         right: 0,\r\n//         bottom: 0,\r\n//         backgroundImage: 'radial-gradient(circle at 20% 30%, rgba(100, 100, 255, 0.1) 0%, transparent 50%)',\r\n//         zIndex: 0\r\n//       }}></div>\r\n\r\n//       {/* Floating particles */}\r\n//       {[...Array(20)].map((_, i) => (\r\n//         <div key={i} style={{\r\n//           position: 'absolute',\r\n//           width: '2px',\r\n//           height: '2px',\r\n//           borderRadius: '50%',\r\n//           background: 'rgba(100, 200, 255, 0.8)',\r\n//           top: `${Math.random() * 100}%`,\r\n//           left: `${Math.random() * 100}%`,\r\n//           animation: `float ${5 + Math.random() * 10}s linear infinite`,\r\n//           zIndex: 0\r\n//         }}></div>\r\n//       ))}\r\n\r\n//       <div style={{\r\n//         position: 'relative',\r\n//         zIndex: 1,\r\n//         maxWidth: '1200px',\r\n//         margin: '0 auto',\r\n//         textAlign: 'center'\r\n//       }}>\r\n//         <h1 style={{\r\n//           fontSize: '3.5rem',\r\n//           fontWeight: '800',\r\n//           marginBottom: '2rem',\r\n//           background: 'linear-gradient(90deg, #00d4ff, #7e5bef)',\r\n//           WebkitBackgroundClip: 'text',\r\n//           WebkitTextFillColor: 'transparent',\r\n//           textShadow: '0 0 10px rgba(100, 200, 255, 0.3)'\r\n//         }}>\r\n//           AI Video Summarization\r\n//         </h1>\r\n//         <p style={{\r\n//           fontSize: '1.2rem',\r\n//           marginBottom: '3rem',\r\n//           opacity: 0.8\r\n//         }}>\r\n//           Using Deep Learning Techniques\r\n//         </p>\r\n\r\n//         {!loading && !summaryUrl && (\r\n//           <div \r\n//             onDragOver={handleDragOver}\r\n//             onDragLeave={handleDragLeave}\r\n//             onDrop={handleDrop}\r\n//             onClick={() => document.getElementById('fileInput').click()}\r\n//             style={{\r\n//               border: `2px dashed ${isDragging ? '#7e5bef' : 'rgba(255, 255, 255, 0.2)'}`,\r\n//               borderRadius: '20px',\r\n//               padding: '3rem 2rem',\r\n//               background: 'rgba(0, 0, 0, 0.2)',\r\n//               backdropFilter: 'blur(10px)',\r\n//               cursor: 'pointer',\r\n//               transition: 'all 0.3s ease',\r\n//               boxShadow: isDragging ? '0 0 20px rgba(126, 91, 239, 0.5)' : '0 0 20px rgba(0, 0, 0, 0.2)',\r\n//               margin: '0 auto',\r\n//               maxWidth: '600px',\r\n//               position: 'relative',\r\n//               overflow: 'hidden'\r\n//             }}\r\n//           >\r\n//             <div style={{\r\n//               position: 'absolute',\r\n//               top: 0,\r\n//               left: 0,\r\n//               right: 0,\r\n//               height: '3px',\r\n//               background: 'linear-gradient(90deg, #00d4ff, #7e5bef)',\r\n//               width: `${progress}%`,\r\n//               transition: 'width 0.3s ease'\r\n//             }}></div>\r\n//             <div style={{\r\n//               fontSize: '5rem',\r\n//               marginBottom: '1rem',\r\n//               color: 'rgba(100, 200, 255, 0.5)'\r\n//             }}>\r\n//               <i className=\"fas fa-video\"></i>\r\n//             </div>\r\n//             <h3 style={{\r\n//               marginBottom: '1rem',\r\n//               fontSize: '1.5rem'\r\n//             }}>\r\n//               {isDragging ? 'Drop your video here' : 'Upload your video to summarize'}\r\n//             </h3>\r\n//             <p style={{\r\n//               opacity: 0.7,\r\n//               marginBottom: '1.5rem'\r\n//             }}>\r\n//               Drag & drop or click to browse files\r\n//             </p>\r\n//             <input \r\n//               id=\"fileInput\"\r\n//               type=\"file\" \r\n//               accept=\"video/*\" \r\n//               onChange={handleFileChange}\r\n//               style={{ display: 'none' }}\r\n//             />\r\n//             {video && (\r\n//               <button \r\n//                 onClick={(e) => {\r\n//                   e.stopPropagation();\r\n//                   handleUpload();\r\n//                 }}\r\n//                 style={{\r\n//                   background: 'linear-gradient(90deg, #00d4ff, #7e5bef)',\r\n//                   border: 'none',\r\n//                   padding: '0.8rem 2rem',\r\n//                   borderRadius: '50px',\r\n//                   color: 'white',\r\n//                   fontWeight: '600',\r\n//                   cursor: 'pointer',\r\n//                   transition: 'all 0.3s ease',\r\n//                   boxShadow: '0 4px 15px rgba(0, 212, 255, 0.3)',\r\n//                   marginTop: '1rem'\r\n//                 }}\r\n//               >\r\n//                 Process Video\r\n//               </button>\r\n//             )}\r\n//           </div>\r\n//         )}\r\n\r\n//         {loading && (\r\n//           <div style={{\r\n//             background: 'rgba(0, 0, 0, 0.2)',\r\n//             backdropFilter: 'blur(10px)',\r\n//             borderRadius: '20px',\r\n//             padding: '3rem',\r\n//             maxWidth: '600px',\r\n//             margin: '0 auto',\r\n//             textAlign: 'center'\r\n//           }}>\r\n//             <div style={{\r\n//               position: 'relative',\r\n//               width: '150px',\r\n//               height: '150px',\r\n//               margin: '0 auto 2rem'\r\n//             }}>\r\n//               <div style={{\r\n//                 position: 'absolute',\r\n//                 top: '50%',\r\n//                 left: '50%',\r\n//                 transform: 'translate(-50%, -50%)',\r\n//                 width: '100%',\r\n//                 height: '100%',\r\n//                 border: '3px solid rgba(100, 200, 255, 0.2)',\r\n//                 borderRadius: '50%',\r\n//                 animation: 'pulse 2s infinite'\r\n//               }}></div>\r\n//               <div style={{\r\n//                 position: 'absolute',\r\n//                 top: '50%',\r\n//                 left: '50%',\r\n//                 transform: 'translate(-50%, -50%)',\r\n//                 width: '80%',\r\n//                 height: '80%',\r\n//                 border: '3px solid rgba(100, 200, 255, 0.4)',\r\n//                 borderRadius: '50%',\r\n//                 animation: 'pulse 2s infinite 0.5s'\r\n//               }}></div>\r\n//               <div style={{\r\n//                 position: 'absolute',\r\n//                 top: '50%',\r\n//                 left: '50%',\r\n//                 transform: 'translate(-50%, -50%)',\r\n//                 width: '60%',\r\n//                 height: '60%',\r\n//                 border: '3px solid rgba(100, 200, 255, 0.6)',\r\n//                 borderRadius: '50%',\r\n//                 animation: 'pulse 2s infinite 1s'\r\n//               }}></div>\r\n//               <div style={{\r\n//                 position: 'absolute',\r\n//                 top: '50%',\r\n//                 left: '50%',\r\n//                 transform: 'translate(-50%, -50%)',\r\n//                 fontSize: '3rem',\r\n//                 color: '#00d4ff'\r\n//               }}>\r\n//                 <i className=\"fas fa-brain\"></i>\r\n//               </div>\r\n//             </div>\r\n//             <h3 style={{\r\n//               marginBottom: '1rem',\r\n//               fontSize: '1.5rem'\r\n//             }}>\r\n//               Analyzing your video...\r\n//             </h3>\r\n//             <p style={{\r\n//               opacity: 0.8,\r\n//               fontStyle: 'italic',\r\n//               minHeight: '50px'\r\n//             }}>\r\n//               {currentTip}\r\n//             </p>\r\n//             <div style={{\r\n//               width: '100%',\r\n//               height: '6px',\r\n//               background: 'rgba(255, 255, 255, 0.1)',\r\n//               borderRadius: '3px',\r\n//               marginTop: '2rem',\r\n//               overflow: 'hidden'\r\n//             }}>\r\n//               <div style={{\r\n//                 width: `${progress}%`,\r\n//                 height: '100%',\r\n//                 background: 'linear-gradient(90deg, #00d4ff, #7e5bef)',\r\n//                 transition: 'width 0.3s ease'\r\n//               }}></div>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {summaryUrl && (\r\n//           <div style={{\r\n//             background: 'rgba(0, 0, 0, 0.2)',\r\n//             backdropFilter: 'blur(10px)',\r\n//             borderRadius: '20px',\r\n//             padding: '3rem',\r\n//             maxWidth: '800px',\r\n//             margin: '0 auto',\r\n//             textAlign: 'center'\r\n//           }}>\r\n//             <h3 style={{\r\n//               marginBottom: '2rem',\r\n//               fontSize: '1.8rem',\r\n//               color: '#00d4ff'\r\n//             }}>\r\n//               Your summarized video is ready!\r\n//             </h3>\r\n//             <video \r\n//               src={summaryUrl} \r\n//               controls \r\n//               style={{\r\n//                 width: '100%',\r\n//                 maxWidth: '600px',\r\n//                 borderRadius: '10px',\r\n//                 boxShadow: '0 10px 30px rgba(0, 0, 0, 0.3)'\r\n//               }}\r\n//             />\r\n//             <div style={{ marginTop: '2rem' }}>\r\n//               <a \r\n//                 href={summaryUrl} \r\n//                 download\r\n//                 style={{\r\n//                   background: 'linear-gradient(90deg, #00d4ff, #7e5bef)',\r\n//                   border: 'none',\r\n//                   padding: '0.8rem 2rem',\r\n//                   borderRadius: '50px',\r\n//                   color: 'white',\r\n//                   fontWeight: '600',\r\n//                   cursor: 'pointer',\r\n//                   transition: 'all 0.3s ease',\r\n//                   boxShadow: '0 4px 15px rgba(0, 212, 255, 0.3)',\r\n//                   textDecoration: 'none',\r\n//                   display: 'inline-block'\r\n//                 }}\r\n//               >\r\n//                 Download Summary\r\n//               </a>\r\n//               <button \r\n//                 onClick={() => {\r\n//                   setVideo(null);\r\n//                   setSummaryUrl(null);\r\n//                 }}\r\n//                 style={{\r\n//                   background: 'rgba(255, 255, 255, 0.1)',\r\n//                   border: '1px solid rgba(255, 255, 255, 0.2)',\r\n//                   padding: '0.8rem 2rem',\r\n//                   borderRadius: '50px',\r\n//                   color: 'white',\r\n//                   fontWeight: '600',\r\n//                   cursor: 'pointer',\r\n//                   transition: 'all 0.3s ease',\r\n//                   marginLeft: '1rem'\r\n//                 }}\r\n//               >\r\n//                 Process Another Video\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n\r\n//       {/* Add Font Awesome for icons */}\r\n//       <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\" />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}