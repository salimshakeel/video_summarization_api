{"ast":null,"code":"var _jsxFileName = \"D:\\\\video_summarization_api\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport UploadForm from './UploadForm';\nimport ResultPlayer from './ResultPlayer';\nimport './index.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [video, setVideo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [summaryUrl, setSummaryUrl] = useState(null);\n  const handleFileChange = e => {\n    setVideo(e.target.files[0]);\n    setSummaryUrl(null);\n  };\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!video) return;\n    const formData = new FormData();\n    formData.append('video', video);\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:8000/summarize', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Upload failed');\n      }\n      const data = await response.json();\n      const fullUrl = `http://localhost:8000${data.summary_video_url}`;\n      setSummaryUrl(fullUrl);\n    } catch (err) {\n      alert('Error: ' + err.message);\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: \"Clipify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"hero\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hero-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Clipify: AI Video Summarization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Upload your video, and let our smart summarizer give you the highlights in seconds.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hero-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/assets/ai.jpg\",\n            alt: \"AI summarizing video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UploadForm, {\n        video: video,\n        loading: loading,\n        onFileChange: handleFileChange,\n        onUpload: handleUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), summaryUrl && /*#__PURE__*/_jsxDEV(ResultPlayer, {\n        summaryUrl: summaryUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2025 Clipify - Built with React + FastAPI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-links\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Privacy Policy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"GitHub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"SbVr7xhFLfJfpzJFmCJ7Yu1PE1U=\");\n_c = App;\nexport default App;\n\n// // src/App.js\n// import React, { useState } from 'react';\n\n// function App() {\n//   const [video, setVideo] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [summaryUrl, setSummaryUrl] = useState(null);\n\n//   // ‚úÖ You forgot this function\n//   const handleFileChange = (e) => {\n//     setVideo(e.target.files[0]);\n//     setSummaryUrl(null);\n//   };\n\n//   const handleUpload = async () => {\n//     if (!video) return;\n\n//     const formData = new FormData();\n//     formData.append(\"video\", video); // must match FastAPI parameter name\n\n//     setLoading(true);\n\n//     try {\n//       const response = await fetch(\"http://localhost:8000/summarize\", {\n//         method: \"POST\",\n//         body: formData,\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(\"Upload failed\");\n//       }\n\n//       const data = await response.json();\n//       const fullUrl = `http://localhost:8000${data.summary_video_url}`;\n//       setSummaryUrl(fullUrl);\n//     } catch (err) {\n//       alert(\"Error: \" + err.message);\n//       console.error(err);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: 40 }}>\n//       <h2>üé¨ Video Summarization</h2>\n//       <input type=\"file\" accept=\"video/*\" onChange={handleFileChange} />\n//       <br />\n//       <button onClick={handleUpload} disabled={!video || loading} style={{ marginTop: 10 }}>\n//         {loading ? \"Summarizing...\" : \"Upload & Summarize\"}\n//       </button>\n\n//       {summaryUrl && (\n//         <div style={{ marginTop: 20 }}>\n//           <h4>üì• Summarized Video:</h4>\n//           <video src={summaryUrl} controls width=\"480\" />\n//           <br />\n//           <a href={summaryUrl} download style={{ marginTop: 10, display: 'inline-block' }}>\n//             ‚¨áÔ∏è Download Summary\n//           </a>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// // // src/App.js\n// // import React, { useState, useEffect } from 'react';\n\n// // function App() {\n// //   const [video, setVideo] = useState(null);\n// //   const [loading, setLoading] = useState(false);\n// //   const [summaryUrl, setSummaryUrl] = useState(null);\n// //   const [progress, setProgress] = useState(0);\n// //   const [currentTip, setCurrentTip] = useState('');\n// //   const [isDragging, setIsDragging] = useState(false);\n\n// //   const tips = [\n// //     \"Did you know AI can summarize a full lecture in seconds?\",\n// //     \"Our neural networks are crunching your video...\",\n// //     \"Let AI do the heavy lifting!\",\n// //     \"Processing your video with deep learning magic...\",\n// //     \"Analyzing frames and extracting key moments...\"\n// //   ];\n\n// //   useEffect(() => {\n// //     if (loading) {\n// //       const tipInterval = setInterval(() => {\n// //         setCurrentTip(tips[Math.floor(Math.random() * tips.length)]);\n// //       }, 4000);\n// //       return () => clearInterval(tipInterval);\n// //     }\n// //   }, [loading]);\n\n// //   const handleFileChange = (e) => {\n// //     setVideo(e.target.files[0]);\n// //     setSummaryUrl(null);\n// //   };\n\n// //   const handleDragOver = (e) => {\n// //     e.preventDefault();\n// //     setIsDragging(true);\n// //   };\n\n// //   const handleDragLeave = () => {\n// //     setIsDragging(false);\n// //   };\n\n// //   const handleDrop = (e) => {\n// //     e.preventDefault();\n// //     setIsDragging(false);\n// //     if (e.dataTransfer.files[0]) {\n// //       setVideo(e.dataTransfer.files[0]);\n// //       setSummaryUrl(null);\n// //     }\n// //   };\n\n// //   const handleUpload = async () => {\n// //     if (!video) return;\n\n// //     const formData = new FormData();\n// //     formData.append(\"video\", video);\n\n// //     setLoading(true);\n// //     setProgress(0);\n\n// //     try {\n// //       const response = await fetch(\"http://localhost:8000/summarize\", {\n// //         method: \"POST\",\n// //         body: formData,\n// //       });\n\n// //       if (!response.ok) {\n// //         throw new Error(\"Upload failed\");\n// //       }\n\n// //       const data = await response.json();\n// //       const fullUrl = `http://localhost:8000${data.summary_video_url}`;\n// //       setSummaryUrl(fullUrl);\n// //     } catch (err) {\n// //       alert(\"Error: \" + err.message);\n// //       console.error(err);\n// //     } finally {\n// //       setLoading(false);\n// //       setProgress(0);\n// //     }\n// //   };\n\n// //   return (\n// //     <div style={{\n// //       minHeight: '100vh',\n// //       background: 'linear-gradient(135deg, #0f0c29, #302b63, #24243e)',\n// //       color: 'white',\n// //       position: 'relative',\n// //       overflow: 'hidden',\n// //       padding: '2rem'\n// //     }}>\n// //       {/* Animated background elements */}\n// //       <div style={{\n// //         position: 'absolute',\n// //         top: 0,\n// //         left: 0,\n// //         right: 0,\n// //         bottom: 0,\n// //         backgroundImage: 'radial-gradient(circle at 20% 30%, rgba(100, 100, 255, 0.1) 0%, transparent 50%)',\n// //         zIndex: 0\n// //       }}></div>\n\n// //       {/* Floating particles */}\n// //       {[...Array(20)].map((_, i) => (\n// //         <div key={i} style={{\n// //           position: 'absolute',\n// //           width: '2px',\n// //           height: '2px',\n// //           borderRadius: '50%',\n// //           background: 'rgba(100, 200, 255, 0.8)',\n// //           top: `${Math.random() * 100}%`,\n// //           left: `${Math.random() * 100}%`,\n// //           animation: `float ${5 + Math.random() * 10}s linear infinite`,\n// //           zIndex: 0\n// //         }}></div>\n// //       ))}\n\n// //       <div style={{\n// //         position: 'relative',\n// //         zIndex: 1,\n// //         maxWidth: '1200px',\n// //         margin: '0 auto',\n// //         textAlign: 'center'\n// //       }}>\n// //         <h1 style={{\n// //           fontSize: '3.5rem',\n// //           fontWeight: '800',\n// //           marginBottom: '2rem',\n// //           background: 'linear-gradient(90deg, #00d4ff, #7e5bef)',\n// //           WebkitBackgroundClip: 'text',\n// //           WebkitTextFillColor: 'transparent',\n// //           textShadow: '0 0 10px rgba(100, 200, 255, 0.3)'\n// //         }}>\n// //           AI Video Summarization\n// //         </h1>\n// //         <p style={{\n// //           fontSize: '1.2rem',\n// //           marginBottom: '3rem',\n// //           opacity: 0.8\n// //         }}>\n// //           Using Deep Learning Techniques\n// //         </p>\n\n// //         {!loading && !summaryUrl && (\n// //           <div \n// //             onDragOver={handleDragOver}\n// //             onDragLeave={handleDragLeave}\n// //             onDrop={handleDrop}\n// //             onClick={() => document.getElementById('fileInput').click()}\n// //             style={{\n// //               border: `2px dashed ${isDragging ? '#7e5bef' : 'rgba(255, 255, 255, 0.2)'}`,\n// //               borderRadius: '20px',\n// //               padding: '3rem 2rem',\n// //               background: 'rgba(0, 0, 0, 0.2)',\n// //               backdropFilter: 'blur(10px)',\n// //               cursor: 'pointer',\n// //               transition: 'all 0.3s ease',\n// //               boxShadow: isDragging ? '0 0 20px rgba(126, 91, 239, 0.5)' : '0 0 20px rgba(0, 0, 0, 0.2)',\n// //               margin: '0 auto',\n// //               maxWidth: '600px',\n// //               position: 'relative',\n// //               overflow: 'hidden'\n// //             }}\n// //           >\n// //             <div style={{\n// //               position: 'absolute',\n// //               top: 0,\n// //               left: 0,\n// //               right: 0,\n// //               height: '3px',\n// //               background: 'linear-gradient(90deg, #00d4ff, #7e5bef)',\n// //               width: `${progress}%`,\n// //               transition: 'width 0.3s ease'\n// //             }}></div>\n// //             <div style={{\n// //               fontSize: '5rem',\n// //               marginBottom: '1rem',\n// //               color: 'rgba(100, 200, 255, 0.5)'\n// //             }}>\n// //               <i className=\"fas fa-video\"></i>\n// //             </div>\n// //             <h3 style={{\n// //               marginBottom: '1rem',\n// //               fontSize: '1.5rem'\n// //             }}>\n// //               {isDragging ? 'Drop your video here' : 'Upload your video to summarize'}\n// //             </h3>\n// //             <p style={{\n// //               opacity: 0.7,\n// //               marginBottom: '1.5rem'\n// //             }}>\n// //               Drag & drop or click to browse files\n// //             </p>\n// //             <input \n// //               id=\"fileInput\"\n// //               type=\"file\" \n// //               accept=\"video/*\" \n// //               onChange={handleFileChange}\n// //               style={{ display: 'none' }}\n// //             />\n// //             {video && (\n// //               <button \n// //                 onClick={(e) => {\n// //                   e.stopPropagation();\n// //                   handleUpload();\n// //                 }}\n// //                 style={{\n// //                   background: 'linear-gradient(90deg, #00d4ff, #7e5bef)',\n// //                   border: 'none',\n// //                   padding: '0.8rem 2rem',\n// //                   borderRadius: '50px',\n// //                   color: 'white',\n// //                   fontWeight: '600',\n// //                   cursor: 'pointer',\n// //                   transition: 'all 0.3s ease',\n// //                   boxShadow: '0 4px 15px rgba(0, 212, 255, 0.3)',\n// //                   marginTop: '1rem'\n// //                 }}\n// //               >\n// //                 Process Video\n// //               </button>\n// //             )}\n// //           </div>\n// //         )}\n\n// //         {loading && (\n// //           <div style={{\n// //             background: 'rgba(0, 0, 0, 0.2)',\n// //             backdropFilter: 'blur(10px)',\n// //             borderRadius: '20px',\n// //             padding: '3rem',\n// //             maxWidth: '600px',\n// //             margin: '0 auto',\n// //             textAlign: 'center'\n// //           }}>\n// //             <div style={{\n// //               position: 'relative',\n// //               width: '150px',\n// //               height: '150px',\n// //               margin: '0 auto 2rem'\n// //             }}>\n// //               <div style={{\n// //                 position: 'absolute',\n// //                 top: '50%',\n// //                 left: '50%',\n// //                 transform: 'translate(-50%, -50%)',\n// //                 width: '100%',\n// //                 height: '100%',\n// //                 border: '3px solid rgba(100, 200, 255, 0.2)',\n// //                 borderRadius: '50%',\n// //                 animation: 'pulse 2s infinite'\n// //               }}></div>\n// //               <div style={{\n// //                 position: 'absolute',\n// //                 top: '50%',\n// //                 left: '50%',\n// //                 transform: 'translate(-50%, -50%)',\n// //                 width: '80%',\n// //                 height: '80%',\n// //                 border: '3px solid rgba(100, 200, 255, 0.4)',\n// //                 borderRadius: '50%',\n// //                 animation: 'pulse 2s infinite 0.5s'\n// //               }}></div>\n// //               <div style={{\n// //                 position: 'absolute',\n// //                 top: '50%',\n// //                 left: '50%',\n// //                 transform: 'translate(-50%, -50%)',\n// //                 width: '60%',\n// //                 height: '60%',\n// //                 border: '3px solid rgba(100, 200, 255, 0.6)',\n// //                 borderRadius: '50%',\n// //                 animation: 'pulse 2s infinite 1s'\n// //               }}></div>\n// //               <div style={{\n// //                 position: 'absolute',\n// //                 top: '50%',\n// //                 left: '50%',\n// //                 transform: 'translate(-50%, -50%)',\n// //                 fontSize: '3rem',\n// //                 color: '#00d4ff'\n// //               }}>\n// //                 <i className=\"fas fa-brain\"></i>\n// //               </div>\n// //             </div>\n// //             <h3 style={{\n// //               marginBottom: '1rem',\n// //               fontSize: '1.5rem'\n// //             }}>\n// //               Analyzing your video...\n// //             </h3>\n// //             <p style={{\n// //               opacity: 0.8,\n// //               fontStyle: 'italic',\n// //               minHeight: '50px'\n// //             }}>\n// //               {currentTip}\n// //             </p>\n// //             <div style={{\n// //               width: '100%',\n// //               height: '6px',\n// //               background: 'rgba(255, 255, 255, 0.1)',\n// //               borderRadius: '3px',\n// //               marginTop: '2rem',\n// //               overflow: 'hidden'\n// //             }}>\n// //               <div style={{\n// //                 width: `${progress}%`,\n// //                 height: '100%',\n// //                 background: 'linear-gradient(90deg, #00d4ff, #7e5bef)',\n// //                 transition: 'width 0.3s ease'\n// //               }}></div>\n// //             </div>\n// //           </div>\n// //         )}\n\n// //         {summaryUrl && (\n// //           <div style={{\n// //             background: 'rgba(0, 0, 0, 0.2)',\n// //             backdropFilter: 'blur(10px)',\n// //             borderRadius: '20px',\n// //             padding: '3rem',\n// //             maxWidth: '800px',\n// //             margin: '0 auto',\n// //             textAlign: 'center'\n// //           }}>\n// //             <h3 style={{\n// //               marginBottom: '2rem',\n// //               fontSize: '1.8rem',\n// //               color: '#00d4ff'\n// //             }}>\n// //               Your summarized video is ready!\n// //             </h3>\n// //             <video \n// //               src={summaryUrl} \n// //               controls \n// //               style={{\n// //                 width: '100%',\n// //                 maxWidth: '600px',\n// //                 borderRadius: '10px',\n// //                 boxShadow: '0 10px 30px rgba(0, 0, 0, 0.3)'\n// //               }}\n// //             />\n// //             <div style={{ marginTop: '2rem' }}>\n// //               <a \n// //                 href={summaryUrl} \n// //                 download\n// //                 style={{\n// //                   background: 'linear-gradient(90deg, #00d4ff, #7e5bef)',\n// //                   border: 'none',\n// //                   padding: '0.8rem 2rem',\n// //                   borderRadius: '50px',\n// //                   color: 'white',\n// //                   fontWeight: '600',\n// //                   cursor: 'pointer',\n// //                   transition: 'all 0.3s ease',\n// //                   boxShadow: '0 4px 15px rgba(0, 212, 255, 0.3)',\n// //                   textDecoration: 'none',\n// //                   display: 'inline-block'\n// //                 }}\n// //               >\n// //                 Download Summary\n// //               </a>\n// //               <button \n// //                 onClick={() => {\n// //                   setVideo(null);\n// //                   setSummaryUrl(null);\n// //                 }}\n// //                 style={{\n// //                   background: 'rgba(255, 255, 255, 0.1)',\n// //                   border: '1px solid rgba(255, 255, 255, 0.2)',\n// //                   padding: '0.8rem 2rem',\n// //                   borderRadius: '50px',\n// //                   color: 'white',\n// //                   fontWeight: '600',\n// //                   cursor: 'pointer',\n// //                   transition: 'all 0.3s ease',\n// //                   marginLeft: '1rem'\n// //                 }}\n// //               >\n// //                 Process Another Video\n// //               </button>\n// //             </div>\n// //           </div>\n// //         )}\n// //       </div>\n\n// //       {/* Add Font Awesome for icons */}\n// //       <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\" />\n// //     </div>\n// //   );\n// // }\n\n// // export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","UploadForm","ResultPlayer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","video","setVideo","loading","setLoading","summaryUrl","setSummaryUrl","handleFileChange","e","target","files","handleUpload","preventDefault","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","fullUrl","summary_video_url","err","alert","message","console","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onFileChange","onUpload","href","_c","$RefreshReg$"],"sources":["D:/video_summarization_api/frontend/src/App.js"],"sourcesContent":["\r\n// src/App.js\r\nimport React, { useState } from 'react';\r\nimport UploadForm from './UploadForm';\r\nimport ResultPlayer from './ResultPlayer';\r\nimport './index.css';\r\n\r\nfunction App() {\r\n  const [video, setVideo] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [summaryUrl, setSummaryUrl] = useState(null);\r\n\r\n  const handleFileChange = (e) => {\r\n    setVideo(e.target.files[0]);\r\n    setSummaryUrl(null);\r\n  };\r\n\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    if (!video) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append('video', video);\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch('http://localhost:8000/summarize', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Upload failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      const fullUrl = `http://localhost:8000${data.summary_video_url}`;\r\n      setSummaryUrl(fullUrl);\r\n    } catch (err) {\r\n      alert('Error: ' + err.message);\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <nav>\r\n          <div className=\"logo\">Clipify</div>\r\n        </nav>\r\n      </header>\r\n\r\n      <main>\r\n        <section className=\"hero\">\r\n          <div className=\"hero-content\">\r\n            <h1>Clipify: AI Video Summarization</h1>\r\n            <p>\r\n              Upload your video, and let our smart summarizer give you the\r\n              highlights in seconds.\r\n            </p>\r\n          </div>\r\n          <div className=\"hero-image\">\r\n            <img src=\"/assets/ai.jpg\" alt=\"AI summarizing video\" />\r\n          </div>\r\n        </section>\r\n\r\n        <UploadForm\r\n          video={video}\r\n          loading={loading}\r\n          onFileChange={handleFileChange}\r\n          onUpload={handleUpload}\r\n        />\r\n\r\n        {summaryUrl && <ResultPlayer summaryUrl={summaryUrl} />}\r\n      </main>\r\n\r\n      <footer>\r\n        <p>¬© 2025 Clipify - Built with React + FastAPI</p>\r\n        <div className=\"footer-links\">\r\n          <a href=\"#\">Privacy Policy</a>\r\n          <a href=\"#\">Terms</a>\r\n          <a href=\"#\">GitHub</a>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// // src/App.js\r\n// import React, { useState } from 'react';\r\n\r\n// function App() {\r\n//   const [video, setVideo] = useState(null);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [summaryUrl, setSummaryUrl] = useState(null);\r\n\r\n//   // ‚úÖ You forgot this function\r\n//   const handleFileChange = (e) => {\r\n//     setVideo(e.target.files[0]);\r\n//     setSummaryUrl(null);\r\n//   };\r\n\r\n//   const handleUpload = async () => {\r\n//     if (!video) return;\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"video\", video); // must match FastAPI parameter name\r\n\r\n//     setLoading(true);\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:8000/summarize\", {\r\n//         method: \"POST\",\r\n//         body: formData,\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error(\"Upload failed\");\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       const fullUrl = `http://localhost:8000${data.summary_video_url}`;\r\n//       setSummaryUrl(fullUrl);\r\n//     } catch (err) {\r\n//       alert(\"Error: \" + err.message);\r\n//       console.error(err);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ padding: 40 }}>\r\n//       <h2>üé¨ Video Summarization</h2>\r\n//       <input type=\"file\" accept=\"video/*\" onChange={handleFileChange} />\r\n//       <br />\r\n//       <button onClick={handleUpload} disabled={!video || loading} style={{ marginTop: 10 }}>\r\n//         {loading ? \"Summarizing...\" : \"Upload & Summarize\"}\r\n//       </button>\r\n\r\n//       {summaryUrl && (\r\n//         <div style={{ marginTop: 20 }}>\r\n//           <h4>üì• Summarized Video:</h4>\r\n//           <video src={summaryUrl} controls width=\"480\" />\r\n//           <br />\r\n//           <a href={summaryUrl} download style={{ marginTop: 10, display: 'inline-block' }}>\r\n//             ‚¨áÔ∏è Download Summary\r\n//           </a>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // // src/App.js\r\n// // import React, { useState, useEffect } from 'react';\r\n\r\n// // function App() {\r\n// //   const [video, setVideo] = useState(null);\r\n// //   const [loading, setLoading] = useState(false);\r\n// //   const [summaryUrl, setSummaryUrl] = useState(null);\r\n// //   const [progress, setProgress] = useState(0);\r\n// //   const [currentTip, setCurrentTip] = useState('');\r\n// //   const [isDragging, setIsDragging] = useState(false);\r\n\r\n// //   const tips = [\r\n// //     \"Did you know AI can summarize a full lecture in seconds?\",\r\n// //     \"Our neural networks are crunching your video...\",\r\n// //     \"Let AI do the heavy lifting!\",\r\n// //     \"Processing your video with deep learning magic...\",\r\n// //     \"Analyzing frames and extracting key moments...\"\r\n// //   ];\r\n\r\n// //   useEffect(() => {\r\n// //     if (loading) {\r\n// //       const tipInterval = setInterval(() => {\r\n// //         setCurrentTip(tips[Math.floor(Math.random() * tips.length)]);\r\n// //       }, 4000);\r\n// //       return () => clearInterval(tipInterval);\r\n// //     }\r\n// //   }, [loading]);\r\n\r\n// //   const handleFileChange = (e) => {\r\n// //     setVideo(e.target.files[0]);\r\n// //     setSummaryUrl(null);\r\n// //   };\r\n\r\n// //   const handleDragOver = (e) => {\r\n// //     e.preventDefault();\r\n// //     setIsDragging(true);\r\n// //   };\r\n\r\n// //   const handleDragLeave = () => {\r\n// //     setIsDragging(false);\r\n// //   };\r\n\r\n// //   const handleDrop = (e) => {\r\n// //     e.preventDefault();\r\n// //     setIsDragging(false);\r\n// //     if (e.dataTransfer.files[0]) {\r\n// //       setVideo(e.dataTransfer.files[0]);\r\n// //       setSummaryUrl(null);\r\n// //     }\r\n// //   };\r\n\r\n// //   const handleUpload = async () => {\r\n// //     if (!video) return;\r\n\r\n// //     const formData = new FormData();\r\n// //     formData.append(\"video\", video);\r\n\r\n// //     setLoading(true);\r\n// //     setProgress(0);\r\n\r\n// //     try {\r\n// //       const response = await fetch(\"http://localhost:8000/summarize\", {\r\n// //         method: \"POST\",\r\n// //         body: formData,\r\n// //       });\r\n\r\n// //       if (!response.ok) {\r\n// //         throw new Error(\"Upload failed\");\r\n// //       }\r\n\r\n// //       const data = await response.json();\r\n// //       const fullUrl = `http://localhost:8000${data.summary_video_url}`;\r\n// //       setSummaryUrl(fullUrl);\r\n// //     } catch (err) {\r\n// //       alert(\"Error: \" + err.message);\r\n// //       console.error(err);\r\n// //     } finally {\r\n// //       setLoading(false);\r\n// //       setProgress(0);\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div style={{\r\n// //       minHeight: '100vh',\r\n// //       background: 'linear-gradient(135deg, #0f0c29, #302b63, #24243e)',\r\n// //       color: 'white',\r\n// //       position: 'relative',\r\n// //       overflow: 'hidden',\r\n// //       padding: '2rem'\r\n// //     }}>\r\n// //       {/* Animated background elements */}\r\n// //       <div style={{\r\n// //         position: 'absolute',\r\n// //         top: 0,\r\n// //         left: 0,\r\n// //         right: 0,\r\n// //         bottom: 0,\r\n// //         backgroundImage: 'radial-gradient(circle at 20% 30%, rgba(100, 100, 255, 0.1) 0%, transparent 50%)',\r\n// //         zIndex: 0\r\n// //       }}></div>\r\n\r\n// //       {/* Floating particles */}\r\n// //       {[...Array(20)].map((_, i) => (\r\n// //         <div key={i} style={{\r\n// //           position: 'absolute',\r\n// //           width: '2px',\r\n// //           height: '2px',\r\n// //           borderRadius: '50%',\r\n// //           background: 'rgba(100, 200, 255, 0.8)',\r\n// //           top: `${Math.random() * 100}%`,\r\n// //           left: `${Math.random() * 100}%`,\r\n// //           animation: `float ${5 + Math.random() * 10}s linear infinite`,\r\n// //           zIndex: 0\r\n// //         }}></div>\r\n// //       ))}\r\n\r\n// //       <div style={{\r\n// //         position: 'relative',\r\n// //         zIndex: 1,\r\n// //         maxWidth: '1200px',\r\n// //         margin: '0 auto',\r\n// //         textAlign: 'center'\r\n// //       }}>\r\n// //         <h1 style={{\r\n// //           fontSize: '3.5rem',\r\n// //           fontWeight: '800',\r\n// //           marginBottom: '2rem',\r\n// //           background: 'linear-gradient(90deg, #00d4ff, #7e5bef)',\r\n// //           WebkitBackgroundClip: 'text',\r\n// //           WebkitTextFillColor: 'transparent',\r\n// //           textShadow: '0 0 10px rgba(100, 200, 255, 0.3)'\r\n// //         }}>\r\n// //           AI Video Summarization\r\n// //         </h1>\r\n// //         <p style={{\r\n// //           fontSize: '1.2rem',\r\n// //           marginBottom: '3rem',\r\n// //           opacity: 0.8\r\n// //         }}>\r\n// //           Using Deep Learning Techniques\r\n// //         </p>\r\n\r\n// //         {!loading && !summaryUrl && (\r\n// //           <div \r\n// //             onDragOver={handleDragOver}\r\n// //             onDragLeave={handleDragLeave}\r\n// //             onDrop={handleDrop}\r\n// //             onClick={() => document.getElementById('fileInput').click()}\r\n// //             style={{\r\n// //               border: `2px dashed ${isDragging ? '#7e5bef' : 'rgba(255, 255, 255, 0.2)'}`,\r\n// //               borderRadius: '20px',\r\n// //               padding: '3rem 2rem',\r\n// //               background: 'rgba(0, 0, 0, 0.2)',\r\n// //               backdropFilter: 'blur(10px)',\r\n// //               cursor: 'pointer',\r\n// //               transition: 'all 0.3s ease',\r\n// //               boxShadow: isDragging ? '0 0 20px rgba(126, 91, 239, 0.5)' : '0 0 20px rgba(0, 0, 0, 0.2)',\r\n// //               margin: '0 auto',\r\n// //               maxWidth: '600px',\r\n// //               position: 'relative',\r\n// //               overflow: 'hidden'\r\n// //             }}\r\n// //           >\r\n// //             <div style={{\r\n// //               position: 'absolute',\r\n// //               top: 0,\r\n// //               left: 0,\r\n// //               right: 0,\r\n// //               height: '3px',\r\n// //               background: 'linear-gradient(90deg, #00d4ff, #7e5bef)',\r\n// //               width: `${progress}%`,\r\n// //               transition: 'width 0.3s ease'\r\n// //             }}></div>\r\n// //             <div style={{\r\n// //               fontSize: '5rem',\r\n// //               marginBottom: '1rem',\r\n// //               color: 'rgba(100, 200, 255, 0.5)'\r\n// //             }}>\r\n// //               <i className=\"fas fa-video\"></i>\r\n// //             </div>\r\n// //             <h3 style={{\r\n// //               marginBottom: '1rem',\r\n// //               fontSize: '1.5rem'\r\n// //             }}>\r\n// //               {isDragging ? 'Drop your video here' : 'Upload your video to summarize'}\r\n// //             </h3>\r\n// //             <p style={{\r\n// //               opacity: 0.7,\r\n// //               marginBottom: '1.5rem'\r\n// //             }}>\r\n// //               Drag & drop or click to browse files\r\n// //             </p>\r\n// //             <input \r\n// //               id=\"fileInput\"\r\n// //               type=\"file\" \r\n// //               accept=\"video/*\" \r\n// //               onChange={handleFileChange}\r\n// //               style={{ display: 'none' }}\r\n// //             />\r\n// //             {video && (\r\n// //               <button \r\n// //                 onClick={(e) => {\r\n// //                   e.stopPropagation();\r\n// //                   handleUpload();\r\n// //                 }}\r\n// //                 style={{\r\n// //                   background: 'linear-gradient(90deg, #00d4ff, #7e5bef)',\r\n// //                   border: 'none',\r\n// //                   padding: '0.8rem 2rem',\r\n// //                   borderRadius: '50px',\r\n// //                   color: 'white',\r\n// //                   fontWeight: '600',\r\n// //                   cursor: 'pointer',\r\n// //                   transition: 'all 0.3s ease',\r\n// //                   boxShadow: '0 4px 15px rgba(0, 212, 255, 0.3)',\r\n// //                   marginTop: '1rem'\r\n// //                 }}\r\n// //               >\r\n// //                 Process Video\r\n// //               </button>\r\n// //             )}\r\n// //           </div>\r\n// //         )}\r\n\r\n// //         {loading && (\r\n// //           <div style={{\r\n// //             background: 'rgba(0, 0, 0, 0.2)',\r\n// //             backdropFilter: 'blur(10px)',\r\n// //             borderRadius: '20px',\r\n// //             padding: '3rem',\r\n// //             maxWidth: '600px',\r\n// //             margin: '0 auto',\r\n// //             textAlign: 'center'\r\n// //           }}>\r\n// //             <div style={{\r\n// //               position: 'relative',\r\n// //               width: '150px',\r\n// //               height: '150px',\r\n// //               margin: '0 auto 2rem'\r\n// //             }}>\r\n// //               <div style={{\r\n// //                 position: 'absolute',\r\n// //                 top: '50%',\r\n// //                 left: '50%',\r\n// //                 transform: 'translate(-50%, -50%)',\r\n// //                 width: '100%',\r\n// //                 height: '100%',\r\n// //                 border: '3px solid rgba(100, 200, 255, 0.2)',\r\n// //                 borderRadius: '50%',\r\n// //                 animation: 'pulse 2s infinite'\r\n// //               }}></div>\r\n// //               <div style={{\r\n// //                 position: 'absolute',\r\n// //                 top: '50%',\r\n// //                 left: '50%',\r\n// //                 transform: 'translate(-50%, -50%)',\r\n// //                 width: '80%',\r\n// //                 height: '80%',\r\n// //                 border: '3px solid rgba(100, 200, 255, 0.4)',\r\n// //                 borderRadius: '50%',\r\n// //                 animation: 'pulse 2s infinite 0.5s'\r\n// //               }}></div>\r\n// //               <div style={{\r\n// //                 position: 'absolute',\r\n// //                 top: '50%',\r\n// //                 left: '50%',\r\n// //                 transform: 'translate(-50%, -50%)',\r\n// //                 width: '60%',\r\n// //                 height: '60%',\r\n// //                 border: '3px solid rgba(100, 200, 255, 0.6)',\r\n// //                 borderRadius: '50%',\r\n// //                 animation: 'pulse 2s infinite 1s'\r\n// //               }}></div>\r\n// //               <div style={{\r\n// //                 position: 'absolute',\r\n// //                 top: '50%',\r\n// //                 left: '50%',\r\n// //                 transform: 'translate(-50%, -50%)',\r\n// //                 fontSize: '3rem',\r\n// //                 color: '#00d4ff'\r\n// //               }}>\r\n// //                 <i className=\"fas fa-brain\"></i>\r\n// //               </div>\r\n// //             </div>\r\n// //             <h3 style={{\r\n// //               marginBottom: '1rem',\r\n// //               fontSize: '1.5rem'\r\n// //             }}>\r\n// //               Analyzing your video...\r\n// //             </h3>\r\n// //             <p style={{\r\n// //               opacity: 0.8,\r\n// //               fontStyle: 'italic',\r\n// //               minHeight: '50px'\r\n// //             }}>\r\n// //               {currentTip}\r\n// //             </p>\r\n// //             <div style={{\r\n// //               width: '100%',\r\n// //               height: '6px',\r\n// //               background: 'rgba(255, 255, 255, 0.1)',\r\n// //               borderRadius: '3px',\r\n// //               marginTop: '2rem',\r\n// //               overflow: 'hidden'\r\n// //             }}>\r\n// //               <div style={{\r\n// //                 width: `${progress}%`,\r\n// //                 height: '100%',\r\n// //                 background: 'linear-gradient(90deg, #00d4ff, #7e5bef)',\r\n// //                 transition: 'width 0.3s ease'\r\n// //               }}></div>\r\n// //             </div>\r\n// //           </div>\r\n// //         )}\r\n\r\n// //         {summaryUrl && (\r\n// //           <div style={{\r\n// //             background: 'rgba(0, 0, 0, 0.2)',\r\n// //             backdropFilter: 'blur(10px)',\r\n// //             borderRadius: '20px',\r\n// //             padding: '3rem',\r\n// //             maxWidth: '800px',\r\n// //             margin: '0 auto',\r\n// //             textAlign: 'center'\r\n// //           }}>\r\n// //             <h3 style={{\r\n// //               marginBottom: '2rem',\r\n// //               fontSize: '1.8rem',\r\n// //               color: '#00d4ff'\r\n// //             }}>\r\n// //               Your summarized video is ready!\r\n// //             </h3>\r\n// //             <video \r\n// //               src={summaryUrl} \r\n// //               controls \r\n// //               style={{\r\n// //                 width: '100%',\r\n// //                 maxWidth: '600px',\r\n// //                 borderRadius: '10px',\r\n// //                 boxShadow: '0 10px 30px rgba(0, 0, 0, 0.3)'\r\n// //               }}\r\n// //             />\r\n// //             <div style={{ marginTop: '2rem' }}>\r\n// //               <a \r\n// //                 href={summaryUrl} \r\n// //                 download\r\n// //                 style={{\r\n// //                   background: 'linear-gradient(90deg, #00d4ff, #7e5bef)',\r\n// //                   border: 'none',\r\n// //                   padding: '0.8rem 2rem',\r\n// //                   borderRadius: '50px',\r\n// //                   color: 'white',\r\n// //                   fontWeight: '600',\r\n// //                   cursor: 'pointer',\r\n// //                   transition: 'all 0.3s ease',\r\n// //                   boxShadow: '0 4px 15px rgba(0, 212, 255, 0.3)',\r\n// //                   textDecoration: 'none',\r\n// //                   display: 'inline-block'\r\n// //                 }}\r\n// //               >\r\n// //                 Download Summary\r\n// //               </a>\r\n// //               <button \r\n// //                 onClick={() => {\r\n// //                   setVideo(null);\r\n// //                   setSummaryUrl(null);\r\n// //                 }}\r\n// //                 style={{\r\n// //                   background: 'rgba(255, 255, 255, 0.1)',\r\n// //                   border: '1px solid rgba(255, 255, 255, 0.2)',\r\n// //                   padding: '0.8rem 2rem',\r\n// //                   borderRadius: '50px',\r\n// //                   color: 'white',\r\n// //                   fontWeight: '600',\r\n// //                   cursor: 'pointer',\r\n// //                   transition: 'all 0.3s ease',\r\n// //                   marginLeft: '1rem'\r\n// //                 }}\r\n// //               >\r\n// //                 Process Another Video\r\n// //               </button>\r\n// //             </div>\r\n// //           </div>\r\n// //         )}\r\n// //       </div>\r\n\r\n// //       {/* Add Font Awesome for icons */}\r\n// //       <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\" />\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default App;"],"mappings":"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AACA;AACA;;AAEA;;AAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}